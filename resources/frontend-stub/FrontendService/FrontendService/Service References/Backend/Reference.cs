//------------------------------------------------------------------------------
// <auto-generated>
//     Dieser Code wurde von einem Tool generiert.
//     Laufzeitversion:4.0.30319.225
//
//     Änderungen an dieser Datei können falsches Verhalten verursachen und gehen verloren, wenn
//     der Code erneut generiert wird.
// </auto-generated>
//------------------------------------------------------------------------------

namespace FrontendService.Backend {
    using System.Runtime.Serialization;
    
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="systemStatus", Namespace="http://webservice.backend.azuremd.org/")]
    public enum systemStatus : int {
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        NONE = 0,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        BLOBBING = 1,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        UPGRADING = 2,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        STARTING = 3,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        READY = 4,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        BUSY = 5,
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(Namespace="http://webservice.backend.azuremd.org/", ConfigurationName="Backend.Azure")]
    public interface Azure {
        
        [System.ServiceModel.OperationContractAttribute(Action="", ReplyAction="*")]
        [System.ServiceModel.DataContractFormatAttribute(Style=System.ServiceModel.OperationFormatStyle.Rpc)]
        [return: System.ServiceModel.MessageParameterAttribute(Name="return")]
        FrontendService.Backend.systemStatus RegisterVm(string authToken, string vmId, string sourceUrl);
        
        [System.ServiceModel.OperationContractAttribute(Action="", ReplyAction="*")]
        [System.ServiceModel.DataContractFormatAttribute(Style=System.ServiceModel.OperationFormatStyle.Rpc)]
        [return: System.ServiceModel.MessageParameterAttribute(Name="return")]
        FrontendService.Backend.systemStatus StartVm(string authToken, string vmId);
        
        [System.ServiceModel.OperationContractAttribute(Action="", ReplyAction="*")]
        [System.ServiceModel.DataContractFormatAttribute(Style=System.ServiceModel.OperationFormatStyle.Rpc)]
        [return: System.ServiceModel.MessageParameterAttribute(Name="return")]
        FrontendService.Backend.systemStatus RestartVm(string authToken, string vmId);
        
        [System.ServiceModel.OperationContractAttribute(Action="", ReplyAction="*")]
        [System.ServiceModel.DataContractFormatAttribute(Style=System.ServiceModel.OperationFormatStyle.Rpc)]
        [return: System.ServiceModel.MessageParameterAttribute(Name="return")]
        FrontendService.Backend.systemStatus StopVm(string authToken, string vmId);
        
        [System.ServiceModel.OperationContractAttribute(Action="", ReplyAction="*")]
        [System.ServiceModel.DataContractFormatAttribute(Style=System.ServiceModel.OperationFormatStyle.Rpc)]
        [return: System.ServiceModel.MessageParameterAttribute(Name="return")]
        FrontendService.Backend.systemStatus SuspendVm(string authToken, string vmId);
        
        [System.ServiceModel.OperationContractAttribute(Action="", ReplyAction="*")]
        [System.ServiceModel.DataContractFormatAttribute(Style=System.ServiceModel.OperationFormatStyle.Rpc)]
        [return: System.ServiceModel.MessageParameterAttribute(Name="return")]
        FrontendService.Backend.systemStatus ResumeVm(string authToken, string vmId);
        
        [System.ServiceModel.OperationContractAttribute(Action="", ReplyAction="*")]
        [System.ServiceModel.DataContractFormatAttribute(Style=System.ServiceModel.OperationFormatStyle.Rpc)]
        [return: System.ServiceModel.MessageParameterAttribute(Name="return")]
        FrontendService.Backend.systemStatus ResizeComponents(string authToken, string vmId, int ramSize, long hdSize, int cpuCores);
        
        [System.ServiceModel.OperationContractAttribute(Action="", ReplyAction="*")]
        [System.ServiceModel.DataContractFormatAttribute(Style=System.ServiceModel.OperationFormatStyle.Rpc)]
        [return: System.ServiceModel.MessageParameterAttribute(Name="return")]
        string GetVmStatus(string authToken);
        
        [System.ServiceModel.OperationContractAttribute(Action="", ReplyAction="*")]
        [System.ServiceModel.DataContractFormatAttribute(Style=System.ServiceModel.OperationFormatStyle.Rpc)]
        [return: System.ServiceModel.MessageParameterAttribute(Name="return")]
        string GetVmIp(string authToken, string vmId);
        
        [System.ServiceModel.OperationContractAttribute(Action="", ReplyAction="*")]
        [System.ServiceModel.DataContractFormatAttribute(Style=System.ServiceModel.OperationFormatStyle.Rpc)]
        [return: System.ServiceModel.MessageParameterAttribute(Name="return")]
        string GetBackendVersion(string authToken);
        
        [System.ServiceModel.OperationContractAttribute(Action="", ReplyAction="*")]
        [System.ServiceModel.DataContractFormatAttribute(Style=System.ServiceModel.OperationFormatStyle.Rpc)]
        [return: System.ServiceModel.MessageParameterAttribute(Name="return")]
        FrontendService.Backend.systemStatus UpgradeBackend(string authToken, string version, string sourceUrl);
        
        [System.ServiceModel.OperationContractAttribute(Action="", ReplyAction="*")]
        [System.ServiceModel.DataContractFormatAttribute(Style=System.ServiceModel.OperationFormatStyle.Rpc)]
        [return: System.ServiceModel.MessageParameterAttribute(Name="return")]
        FrontendService.Backend.systemStatus SetInitialParams(string authToken, string computerId);
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface AzureChannel : FrontendService.Backend.Azure, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class AzureClient : System.ServiceModel.ClientBase<FrontendService.Backend.Azure>, FrontendService.Backend.Azure {
        
        public AzureClient() {
        }
        
        public AzureClient(string endpointConfigurationName) : 
                base(endpointConfigurationName) {
        }
        
        public AzureClient(string endpointConfigurationName, string remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public AzureClient(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public AzureClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        public FrontendService.Backend.systemStatus RegisterVm(string authToken, string vmId, string sourceUrl) {
            return base.Channel.RegisterVm(authToken, vmId, sourceUrl);
        }
        
        public FrontendService.Backend.systemStatus StartVm(string authToken, string vmId) {
            return base.Channel.StartVm(authToken, vmId);
        }
        
        public FrontendService.Backend.systemStatus RestartVm(string authToken, string vmId) {
            return base.Channel.RestartVm(authToken, vmId);
        }
        
        public FrontendService.Backend.systemStatus StopVm(string authToken, string vmId) {
            return base.Channel.StopVm(authToken, vmId);
        }
        
        public FrontendService.Backend.systemStatus SuspendVm(string authToken, string vmId) {
            return base.Channel.SuspendVm(authToken, vmId);
        }
        
        public FrontendService.Backend.systemStatus ResumeVm(string authToken, string vmId) {
            return base.Channel.ResumeVm(authToken, vmId);
        }
        
        public FrontendService.Backend.systemStatus ResizeComponents(string authToken, string vmId, int ramSize, long hdSize, int cpuCores) {
            return base.Channel.ResizeComponents(authToken, vmId, ramSize, hdSize, cpuCores);
        }
        
        public string GetVmStatus(string authToken) {
            return base.Channel.GetVmStatus(authToken);
        }
        
        public string GetVmIp(string authToken, string vmId) {
            return base.Channel.GetVmIp(authToken, vmId);
        }
        
        public string GetBackendVersion(string authToken) {
            return base.Channel.GetBackendVersion(authToken);
        }
        
        public FrontendService.Backend.systemStatus UpgradeBackend(string authToken, string version, string sourceUrl) {
            return base.Channel.UpgradeBackend(authToken, version, sourceUrl);
        }
        
        public FrontendService.Backend.systemStatus SetInitialParams(string authToken, string computerId) {
            return base.Channel.SetInitialParams(authToken, computerId);
        }
    }
}
