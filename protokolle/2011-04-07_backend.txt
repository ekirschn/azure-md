Meeting, Team Backend
Donnerstag, den 07.04.2011, 15.00 Uhr
Besprechungsraum der AG Softwaretechnik


1. Begrüßung

* Anwesende: Christoph Papmeyer, Ronny Garz, Marco Holzknecht, Eike Kirschner



2. Entwicklungsumgebung

* Probleme bei der Einrichtung von GIT? - keine
* Probleme bei der Funktionsweise / den Arbeitsabläufen?
	* Erläuterung der Funktionsweise von GIT und der Arbeitsabläufe
	* Diesbezüglicher Wiki-Artikel wird bald verfügbar sein	
	* Nutzung von GUI oder Kommandozeile möglich
	* Kommandozeilen-Befehle vorgestellt
		* Prompt zur besseren Orientierung, in welchem Branch man sich befindet: https://github.com/xvzf/vcprompt
	* GUI-Tools
		* Mac: GitX via https://github.com/brotherbard/gitx/archives/experimental
		* Linux: git-gui oder QGit via http://digilander.libero.it/mcostalba/
		
* Eclipse Helios (3.6.2) als IDE
	* UTF8-Kodierung als Standard
	* Formatierungs-XML wird per GIT zur Verfügung gestellt
                * Einheitlich strukturierter Quelltext

* Verwendung
 	* von GIT für Protokolle und Quelltext
	* von Dropbox für Dokumentationen, etc.
	* von E-Mail zur Termin-Koordination

* Christoph: Trennung der Repositories für Front- und Backend
	* "Angst", das Repositories von Frontend-Team ständig kaputt gemacht wird (Möglicherweise hoher Reparatur-Aufwand)
	* Kein gemeinsamer Code, nur Schnittstelle
	* Entscheidung bis Gesamt-Meeting zurückgestellt

* Mac nicht als Entwicklungsplattform nutzbar, da Library VIX API nicht für Mac erhältlich
* Linux als Entwicklungsplattform bevorzugt
* Windows als Entwicklungsplattform noch fraglich
	* Christoph: Probleme bei der Nutzung von VIX API unter Windows7 (SegFault)
	* Marco: Probleme bereits bei der VMWare-Gui
	* Eike: zeitnahe Erprobung von XP und Windows Server-Versionen bis Ende der Woche

* VM Ware + VIX API auf externer Festplatte dabei - kein Download+Anmeldung bei Adobe notwendig

* Problematik: physisch verfügbare Rechner
	* Eike und Ronny - keine Probleme
	* Marco: nur Mac Book zur Verfügung, DualBoot mit Ubuntu angestrebt
	* Christoph: Mac Book und Windows Festrechner zur Verfügung, DualBoot mit Ubuntu angestrebt
	* Angebot von Eike an Marco und Christoph: stellen eines Laptop zur freien Verfügung
	* Überlegung von Ronny: alten Festrechner zur Verfügung zu stellen



3. Image-Erstellung (Frist: nächste Woche - Treff Robert)

* OS: Debian Stable "Squeeze" (2.6.32er Kernel)
* "You may not power on a virtual machine in a virtual machine"
	* VM als Testplattform kommt nicht in Frage
	* Physischen Server benötigt
		* "Server" durch Robert : wird in Uni aufgestellt, wir bekommen sogar physischen Zugriff
		* Später Tests per SSH o.ä. möglich, vorerst per physischen Zugriff
		* Boot per USB

* Begrenzung des OS auf so wenig Komponenten wie möglich
* Benötigte Komponenten
	* SSH
	* Sudo
	* Java (JRE)
	* VMWARE-Server
	* VIX-API
	* gcc (build-essentials)
	* make
	* mlocate
	* C++ compiler
	* Kernel Patch für Debian
        * find
* Weitere vorgeschlagene Komponenten (evtl. später)
	* monitoring tools
	* cpp
	* heartbeat
	
* Zunächst
        * Statisches Image, angepasst auf einen Rechner
        * Verzicht auf Automatisierte Erstellung eines Images
* Orientierung an: www.spotcloud.com (1 Image für alle)
	1. Erstellung des Systems, Installation der Komponenten, Einrichtung
	2. Erstellung eines Abbild des Systems
	* Aufgabe übertragen an: Ronny
* Problematik: Partitionen - automatische Anpassung?
	
* Zukunft? Komplette Automatisierung der Einrichtung + Installation
	* Per Multistrap ( http://wiki.debian.org/EmDebian/CrossDebootstrap#Multistrap )
	* Live-CD inkl. Installer + Installation aller benötigter Komponenten
	* Nach Reboot: Frontend per WebService signalisieren, dass App-Image geladen werden kann
	* Einrichtung des VM Ware Servers: durch Java-Tool



4. Aufgabenbereiche

* QM Marco
	* Softwarequalität:
		* Test der Software (Klassen, Methoden, ...)
		* Review der Architektur
		* Sinnvolle Kommentare (Quelltext, Commits)
	* Verbesserungsvorschläge an Entwickler
	* Prozessqualität:
		* Verbesserungswürdige Zusammenarbeit der Entwickler
		* Zeitplan in Gefahr?
* Chef-Entwickler Christoph
	* Ausarbeitung Architektur in den kommenden Tagen
	* Schnittstellen zu Frontend - noch Vorarbeit durch PM nötig
* Entwickler Ronny
	* Image-Erstellung

* Regelmäßige Berichterstattung (Bereits durchgeführte Aufgaben, ausstehende Aufgaben, Probleme, aktueller Stand)
	* QM -> PM
	* Chef-Entwickler -> PM
	* Entwickler -> Chef-Entwickler



5. Kommende Aufgaben und Arbeitspakete

* FeatureListe wird bei Robert angefragt
	* Nur Laden des Image?
	* JavaDocs?
* Verständigung auf Schnittstellen-Funktionen mit PM Frontend

* Beschränkung auf kompilierbare Sprachen
* Christoph: Scripting-Sprachen zur Wartung angeregt
	* Einfachere Handhabung
	* Unnötig hoher Aufwand, falls Realisierung per Java
	* Vorschlag: Python
	* Wird mit Robert abgeklärt

* Funktionalitäten
	* Protokoll vs. Webservice zur Kommunikation zwischen Frontend und Backend
		* Implementation eines eigenen Protokolls (Serialisierung von Objekten)
			* Robert rät strengstens davon ab (Komplexität, Aufwand, unerprobt)
			* Eigenes Protokoll von VM Ware?
		* Webservice
			* Tunneling über SSH -> HTTPS
			* Authentifizierung
			* Bekommen Zertifikat von AG Softwaretechnik gestellt
		* Realisierung über Webservices beschlossen
	* VIX API zur Kommunikation zwischen VM Ware Server und Java Tool
	* Schnittstellen zu Frontend
* 64-Bit Entwicklung, da von Robert gewünscht
	* Probleme unter Linux und Windows: Auswahl der 64-Bit-Java-Engine per Eclipse
	* Also: 64-Bit-OS benötigt
	* Problem: VIX-API steht nur unter Linux in 64-Bit zur Verfügung